{"version":3,"sources":["webpack:///./src/components/organisms/room/Bookshelf.tsx","webpack:///./src/components/organisms/room/Desk.tsx","webpack:///./src/components/organisms/room/Mail.tsx","webpack:///./src/components/organisms/room/Server.tsx","webpack:///./src/components/organisms/room/Toolbox.tsx","webpack:///./src/components/organisms/room/Room.tsx","webpack:///./src/components/atoms/Stretch.tsx","webpack:///./src/components/atoms/Center.tsx"],"names":["Bookshelf","query","render","normal","childImageSharp","fixed","active","name","to","images","alt","direction","styles","Style","nameStyles","anime","keyframes","css","Desk","Mail","Server","style","Toolbox","Room","StyledStretch","Box","file","RoomImg","Stretch","GatsbyImage","className","children","StyledContent","HeaderStyle","height","FooterStyle","marginTop","Center"],"mappings":"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","file":"6b208612fe5c9313ca2711fec1694a83668e8c90-73ca9bbaedd8451d9a9e.js","sourcesContent":["import { css, keyframes } from \"@emotion/core\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport React, { FC } from \"react\";\nimport { DeepNonNullable } from \"utility-types\";\nimport { BookshelfImgQuery } from \"../../../../types/gatsby-graphql\";\nimport { ImageLink } from \"../../atoms\";\n\nexport const Bookshelf: FC = () => {\n  return <StaticQuery\n    query={query}\n    render={({\n               normal: { childImageSharp: { fixed: normal } },\n               active: { childImageSharp: { fixed: active } }\n             }: DeepNonNullable<BookshelfImgQuery>) =>\n      <ImageLink\n        name=\"Blogs\"\n        to=\"/posts\"\n        images={{\n          normal,\n          active\n        }}\n        alt=\"blogs\"\n        direction=\"right\"\n        styles={Style}\n        nameStyles={nameStyles}/>}\n  />;\n};\n\nconst anime = keyframes`\nfrom {\n  top: 46px;\n  opacity: 0;\n}\n\nto {\n  top: 56px;\n  opacity: 1;\n}\n`;\n\nconst nameStyles = css`\nz-index: 4;\nposition: absolute;\nfont-size: .8em;\ntop: 56px;\nleft: 100px;\ncolor: #6d6d6d;\ntext-decoration: none;\ntransform: rotate(-30deg) skewX(-30deg);\nanimation: ${anime} 200ms;\n`;\n\nconst Style = css`\nposition: absolute;\ntop: 145px;\nleft: 33px;\nz-index: 3;\n`;\n\nconst query = graphql`query BookshelfImg {\n  normal: file(relativePath: {eq: \"bookshelf_normal.png\"}) {\n    childImageSharp {\n      fixed (width: 245) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n  active: file(relativePath: {eq: \"bookshelf_active.png\"}) {\n    childImageSharp {\n      fixed (width: 287) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n}`;\n","import { css, keyframes } from \"@emotion/core\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport React, { FC } from \"react\";\nimport { DeepNonNullable } from \"utility-types\";\nimport { DeskImgQuery } from \"../../../../types/gatsby-graphql\";\nimport { ImageLink } from \"../../atoms\";\n\nexport const Desk: FC = () => {\n  return <StaticQuery\n    query={query}\n    render={({\n               normal: { childImageSharp: { fixed: normal } },\n               active: { childImageSharp: { fixed: active } }\n             }: DeepNonNullable<DeskImgQuery>) =>\n      <ImageLink\n        name=\"Profile\"\n        to=\"/profile\"\n        images={{ normal, active }}\n        alt=\"desk\"\n        styles={styles}\n        nameStyles={nameStyles}\n        direction=\"down\"\n      />}\n  />;\n};\n\nconst anime = keyframes`\nfrom {\n  top: -10px;\n  opacity: 0;\n}\n\nto {\n  top: 0;\n  opacity: 1;\n}\n`;\n\nconst nameStyles = css`\nposition: absolute;\nfont-size: .8em;\nleft: 70px;\ncolor: #6d6d6d;\ntext-decoration: none;\ntransform: rotate(-30deg) skewX(-30deg);\nanimation: ${anime} 200ms;\n`;\n\nconst styles = css`\nposition: absolute;\nbottom: 343px;\nleft: 236px;\nz-index: 2;\n`;\n\nconst query = graphql`query DeskImg {\n  normal: file(relativePath: {eq: \"desk_normal.png\"}) {\n    childImageSharp {\n      fixed (width: 311) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n  active: file(relativePath: {eq: \"desk_active.png\"}) {\n    childImageSharp {\n      fixed (width: 311) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n}`;\n\n","import { css, keyframes } from \"@emotion/core\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport React, { FC } from \"react\";\nimport { DeepNonNullable } from \"utility-types\";\nimport { MailImgQuery } from \"../../../../types/gatsby-graphql\";\nimport { ImageLink } from \"../../atoms\";\n\nexport const Mail: FC = () => {\n  return <StaticQuery\n    query={query}\n    render={({\n               normal: { childImageSharp: { fixed: normal } },\n               active: { childImageSharp: { fixed: active } }\n             }: DeepNonNullable<MailImgQuery>) =>\n      <ImageLink\n        name=\"Contact\"\n        to=\"/contact\"\n        images={{\n          normal,\n          active\n        }}\n        alt=\"mail\"\n        direction=\"up\"\n        styles={styles}\n        nameStyles={nameStyles}/>}\n  />;\n};\n\nconst anime = keyframes`\nfrom {\n  top: -45px;\n  opacity: 0;\n}\n\nto {\n  top: -35px;\n  opacity: 1;\n}\n`;\n\nconst nameStyles = css`\nposition: absolute;\nfont-size: .8em;\ntop: -35px;\nleft: 30px;\ncolor: #6d6d6d;\ntext-decoration: none;\ntransform: rotate(30deg) skewX(30deg);\nanimation: ${anime} 200ms;\n`;\n\nconst styles = {\n  normal: css`\n    position: absolute;\n    bottom: 596px;\n    right: 104px;\n    z-index: 2;\n  `,\n  active: css`\n    position: absolute;\n    bottom: 596px;\n    right: 91px;\n    z-index: 2;\n  `\n};\n\nconst query = graphql`query MailImg {\n  normal: file(relativePath: {eq: \"mail_normal.png\"}) {\n    childImageSharp {\n      fixed (width: 58) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n  active: file(relativePath: {eq: \"mail_active.png\"}) {\n    childImageSharp {\n      fixed (width: 93) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n}`;\n","import { css, keyframes } from \"@emotion/core\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport React, { FC } from \"react\";\nimport { DeepNonNullable } from \"utility-types\";\nimport { ServerImgQuery } from \"../../../../types/gatsby-graphql\";\nimport { ImageLink } from \"../../atoms\";\n\nexport const Server: FC = () => {\n  return <StaticQuery\n    query={query}\n    render={({\n               normal: { childImageSharp: { fixed: normal } },\n               active: { childImageSharp: { fixed: active } }\n             }: DeepNonNullable<ServerImgQuery>) =>\n      <ImageLink\n        name=\"Services\"\n        to=\"/services\"\n        images={{\n          normal,\n          active\n        }}\n        alt=\"services\"\n        direction=\"left\"\n        styles={style}\n        nameStyles={nameStyles}/>}\n  />;\n};\n\nconst anime = keyframes`\nfrom {\n  top: 42px;\n  opacity: 0;\n}\n\nto {\n  top: 52px;\n  opacity: 1;\n}\n`;\n\nconst nameStyles = css`\nposition: absolute;\nfont-size: .8em;\ntop: 52px;\nleft: 32px;\ncolor: #6d6d6d;\ntext-decoration: none;\ntransform: rotate(30deg) skewX(30deg);\nanimation: ${anime} 200ms;\nz-index: 3;\n`;\n\nconst style = css`\nposition: absolute;\nbottom: 222px;\nright: 61px;\nz-index: 2;\n`;\n\nconst query = graphql`query ServerImg {\n  normal: file(relativePath: {eq: \"server_normal.png\"}) {\n    childImageSharp {\n      fixed (width: 221) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n  active: file(relativePath: {eq: \"server_active.png\"}) {\n    childImageSharp {\n      fixed (width: 221) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n}`;\n","import { css, keyframes } from \"@emotion/core\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport React, { FC } from \"react\";\nimport { DeepNonNullable } from \"utility-types\";\nimport { ToolboxImgQuery } from \"../../../../types/gatsby-graphql\";\nimport { ImageLink } from \"../../atoms\";\n\nexport const Toolbox: FC = () => {\n  return <StaticQuery\n    query={query}\n    render={({\n               normal: { childImageSharp: { fixed: normal } },\n               active: { childImageSharp: { fixed: active } }\n             }: DeepNonNullable<ToolboxImgQuery>) =>\n      <ImageLink\n        name=\"Tools\"\n        to=\"/tools\"\n        images={{\n          normal,\n          active\n        }}\n        alt=\"tools\"\n        direction=\"down\"\n        styles={style}\n        nameStyles={nameStyles}/>}\n  />;\n};\n\nconst anime = keyframes`\nfrom {\n  top: -25px;\n  opacity: 0;\n}\n\nto {\n  top: -15px;\n  opacity: 1;\n}\n`;\n\nconst nameStyles = css`\nposition: absolute;\nfont-size: .8em;\ntop: -15px;\nleft: 90px;\ncolor: #6d6d6d;\ntext-decoration: none;\ntransform: rotate(30deg) skewX(30deg);\nanimation: ${anime} 200ms;\n`;\n\nconst style = css`\nposition: absolute;\nbottom: 675px;\nright: 267px;\nz-index: 2;\n`;\n\nconst query = graphql`query ToolboxImg {\n  normal: file(relativePath: {eq: \"toolbox_normal.png\"}) {\n    childImageSharp {\n      fixed (width: 179) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n  active: file(relativePath: {eq: \"toolbox_active.png\"}) {\n    childImageSharp {\n      fixed (width: 179) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n}`;\n","import styled from \"@emotion/styled\";\nimport { graphql, StaticQuery } from \"gatsby\";\nimport GatsbyImage from \"gatsby-image\";\nimport React, { FC } from \"react\";\nimport { DeepNonNullable } from \"utility-types\";\nimport { RoomImgQuery } from \"../../../../types/gatsby-graphql\";\nimport { Stretch } from \"../../atoms/Stretch\";\nimport { Bookshelf } from \"./Bookshelf\";\nimport { Desk } from \"./Desk\";\nimport { Mail } from \"./Mail\";\nimport { Server } from \"./Server\";\nimport { Toolbox } from \"./Toolbox\";\n\nexport const Room: FC = () =>\n  <StyledStretch>\n    <Box>\n      <Desk/>\n      <Bookshelf/>\n      <Mail/>\n      <Server/>\n      <Toolbox/>\n      <StaticQuery\n        query={query}\n        render={({ file: { childImageSharp: { fixed } } }: DeepNonNullable<RoomImgQuery>) => <RoomImg fixed={fixed}/>}\n      />\n    </Box>\n  </StyledStretch>;\n\nconst query = graphql`query RoomImg {\n  file(relativePath: {eq: \"room.png\"}) {\n    childImageSharp {\n      fixed (width: 894) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n}`;\n\nconst StyledStretch = styled(Stretch)`\nalign-items: flex-start;\n`;\n\nconst Box = styled.div`\nposition: relative;\n`;\n\nconst RoomImg = styled(GatsbyImage)`\nz-index: 1;\n`;\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport { DesignProps } from \"../../../types/props\";\nimport { FooterStyle, HeaderStyle, StyledContent } from \"../molecules\";\n\nexport const Stretch: FC<DesignProps> = ({ className, children }) =>\n  <Style className={className}>\n    {children}\n  </Style>;\n\nconst Style = styled.div`\nheight: 100vh;\noverflow: hidden;\ndisplay: flex;\njustify-content: center;\nfont-size: calc(10px + 2vmin);\n${StyledContent} > & {\n  height: calc(100vh - ${HeaderStyle.height} - ${FooterStyle.height} - ${FooterStyle.marginTop});\n}\n`;\n","import styled from \"@emotion/styled\";\nimport * as React from \"react\";\nimport { FC } from \"react\";\nimport { DesignProps } from \"../../../types/props\";\nimport { Stretch } from \"./Stretch\";\n\nexport const Center: FC<DesignProps> = ({ className, children }) =>\n  <Style className={className}>{children}</Style>;\n\nconst Style = styled(Stretch)`\nalign-items: center;\nflex-direction: column;\n`;\n"],"sourceRoot":""}